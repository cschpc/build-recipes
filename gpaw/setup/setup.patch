diff --git a/setup.py b/setup.py
index a449f4f..7bd7f2b 100644
--- a/setup.py
+++ b/setup.py
@@ -8,6 +8,9 @@ import os
 import re
 from setuptools import setup, find_packages, Extension
 from setuptools.command.build_ext import build_ext as _build_ext
+from setuptools.command.install import install as _install
+from setuptools.command.develop import develop as _develop
+
 import subprocess
 import sys
 from pathlib import Path
@@ -188,17 +191,34 @@ class build_ext(_build_ext):
                 mpi_runtime_library_dirs, mpi_define_macros)
             assert error == 0
 
+class install(_install):
+    def run(self):
+        _install.run(self)
+
+        if parallel_python_interpreter:
+            # Also copy gpaw-python
+            plat = distutils.util.get_platform() + '-' + sys.version[0:3]
+            source = 'build/bin.{}/gpaw-python'.format(plat)
+            target = os.path.join(self.install_scripts, 'gpaw-python')
+            self.copy_file(source, target)
+
+class develop(_develop):
+    def run(self):
+        _develop.run(self)
+
+        if parallel_python_interpreter:
+            # Also copy gpaw-python
+            plat = distutils.util.get_platform() + '-' + sys.version[0:3]
+            source = 'build/bin.{}/gpaw-python'.format(plat)
+            target = os.path.join(self.script_dir, 'gpaw-python')
+            self.copy_file(source, target)
+
 
 files = ['gpaw-analyse-basis', 'gpaw-basis',
          'gpaw-mpisim', 'gpaw-plot-parallel-timings', 'gpaw-runscript',
          'gpaw-setup', 'gpaw-upfplot']
 scripts = [str(Path('tools') / script) for script in files]
 
-if parallel_python_interpreter:
-    major, minor = sys.version_info[:2]
-    scripts.append('build/bin.{plat}-{major}.{minor}/gpaw-python'
-                   .format(plat=plat, major=major, minor=minor))
-
 setup(name='gpaw',
       version=version,
       description=description,
@@ -214,7 +234,9 @@ setup(name='gpaw',
       install_requires=['ase>=3.18.0'],
       ext_modules=extensions,
       scripts=scripts,
-      cmdclass={'build_ext': build_ext},
+      cmdclass={'build_ext': build_ext,
+                'install': install,
+                'develop': develop},
       classifiers=[
           'Development Status :: 6 - Mature',
           'License :: OSI Approved :: '
